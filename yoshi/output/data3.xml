<?xml version="1.0" encoding="utf-8" ?>
<doc>
<t>鍵盤楽器のための実時間運指取得システムの構築</t>
<chapter num="0">
<t>概要</t>
<paragraph num="0">
<sen num="0">鏈盤演奏において運指は演奏に影響する重要な要素であるが，同じ楽曲であっても演奏家の身体的特徴や音楽の表現方法によってさまざまな運指が考えられるため，楽曲から運指を一意に決定することは難しい</sen>
<sen num="1">一方，実際に演奏を聴きながらリアルタイムで演奏者の運指情報を得られれば効率的な演奏学習や奏者と一体感のある音楽視聴が可能となる</sen>
<sen num="2">そこで，本研究ではカメラベースのシンプルな画像処理と，鍵盤や運指特性から得られた演奏ルールを組み合わせることで，実時間で高精度に運指を取得するシステムを構築する</sen>
<sen num="3">さらに，鍵盤習熟者による評価実験を行うことで，システムの有効性を検証する</sen>
</paragraph>
</chapter>
<chapter num="1">
<t>1.はじめに</t>
<paragraph num="1">
<sen num="4">演奏家は，楽曲演奏の際に望む音楽表現を実現するために，さまざまな技術を駆使する</sen>
<sen num="5">その1つに運指（指使い）がある</sen>
<sen num="6">運指の違いは音楽表現に大きく影響するため，演奏家は，弾きやすさや効率より作品の意図を考えた音楽的な指使いを選ぶ</sen>
<sen num="7">意図する音楽表現は演奏家各々で異なるため，優れた運指は数多く存在する[4] [6] [8]</sen>
</paragraph>
<paragraph num="2">
<sen num="8">一方，我々が得られる運指情報は，作曲家や演奏家，教育者によって書き入れられた楽譜や教則本など数少ないため，ピアノレッスンなど教育の現場では，指導者は，生徒の演奏を見ながら適した運指の指導を行っている</sen>
<sen num="9">しかし，地理的に離れた教師と生徒がレッスンを行う遠隔レッスン[5]では，質の高いテレビ会議システムの構築はコスト面で難しく，指導者は生徒の演奏状況を十分に確認できない</sen>
<sen num="10">したがって，リアルタイムに演奏者の運指を取得する技術が求められている</sen>
<sen num="11">リアルタイムの運指情報が取得できれば，遠隔レッスン以外にも，誤った運指を指摘するなど独習支援や，演奏と運指を同時に見ながらの効率的な演奏学習，奏者と一体感のある音楽視聴が可能となる</sen>
</paragraph>
<paragraph num="3">
<sen num="12">そこで本研究では，鍵盤奏者を対象とした実時間運指取得システムの構築を目的とする</sen>
<sen num="13">提案システムは演奏者の動作をできるだけ妨げずにカメラを用いて運指を取得する</sen>
<sen num="14">また，鍵盤演奏の特徴を表す演奏ルールを適用することで認識精度を高めている</sen>
</paragraph>
<paragraph num="4">
<sen num="15">以下，2章でシステムの設計について説明し，3章で実装について述べる</sen>
<sen num="16">4章で評価と考察について説明し，5章で関連研究について述べ，最後に6章で本研究のまとめを行う</sen>
</paragraph>
</chapter>
<chapter num="2">
<t>2.運指取得システムの設計</t>
<section num="0">
<t></t>
<paragraph num="5">
<sen num="17">本研究で構築する運指取得システムは，以下の方針をもとに設計した</sen>
</paragraph>
<paragraph num="6">
<sen num="18">(1)演奏を妨げない運指取得</sen>
<sen num="19">(2)演奏ルールを用いた補正処理</sen>
</paragraph>
<paragraph num="7">
<sen num="20">(1)に関しては，コンサートやレッスンなど演奏者が演奏に集中していても利用できるようにできる限り演奏を妨げない，つまり指に余計なデバイスをつけずにシステムを実現することを目指した</sen>
<sen num="21">指先に取り付けるボタンや指の関節に取り付けるセンサ，データグローブ[10]といった補助器具を用いると運指は取得しやすいが，指の動きを束縛してしまう</sen>
<sen num="22">提案システムではカメラを用い，各指の爪に貼り付けたカラーマーカ（図1)の画像処理から運指取得を行う</sen>
<sen num="23">カラーマーカは薄いシールであり，装着に違和感が少ない</sen>
</paragraph>
<paragraph num="8">
<sen num="24">(2)に関しては，演奏や鍵盤，手の特性をもとに定義したルールにより運指を補正する</sen>
<sen num="25">提案システムは，実時間処理を実現するため，画像処理をシンプルにしており，正確な運指の取得は困難である</sen>
<sen num="26">また，鍵盤演奏時には，指が複雑に重なりあうため，画像処理だけで正確に指の位置を特定することは難しい</sen>
<sen num="27">そこで，本システムでは目的を鍵盤演奏に特化し，MIDI鍵盤が生成する打鍵イベント（ノートオン)や離鍵イベント（ノートオフ）の発生と画像処理を連携させることで打鍵位置を特定する</sen>
<sen num="28">また，鍵盤の運指特性や特徴的なパターンをルールとしてもつことで運指情報の修正を行う</sen>
</paragraph>
<paragraph num="9">
<sen num="29">システムの構成を図2に示す</sen>
<sen num="30">カメラから鍵盤とマーカを写した動画像データと鍵盤から得られるMIDIデータをもとにPC上で運指を解析，生成する</sen>
</paragraph>
<paragraph num="10">
<sen num="31">以下，PC上での運指解析処理について説明する</sen>
</paragraph>
</section>
<section num="1">
<t>2.1.運指解析処理の概要</t>
<paragraph num="11">
<sen num="32">運指解析処理の流れを図3に示す</sen>
<sen num="33">カメラや鍵盤は固定されており，前処理としてカメラ画像から黒鍵の位置関係を解析し，鍵盤領域の抽出および鍵盤領域の各ピクセルと鍵番号との対応をさせておく</sen>
<sen num="34">以降の処理は，鍵盤領域に対してだけ行われる</sen>
<sen num="35">また，カラーマ一力の色情報もあらかじめ取得しておく</sen>
</paragraph>
<paragraph num="12">
<sen num="36">打鍵していない指の状態は，打鍵中の指を他の指の状態から絞れるなど運指特定において重要であるため，システムは常にカラーマーカを監視し，マーカの下に存在する鍵を検出している</sen>
<sen num="37">鍵盤から打鍵（離鍵）イベントがあったときは打鍵（離鍵）した指を解析する</sen>
<sen num="38">また，ルールによる運指補正は，何も打鍵されていないとき以外常に実行される</sen>
</paragraph>
</section>
<section num="2">
<t>2.2.カラ一マーカの抽出</t>
<paragraph num="13">
<sen num="39">カラーマーカの色抽出は，カメラ画像から得られたRGB値を輝度変化に強いHSV値に変換し，各HSV値に範囲を設けてその範囲に入っている色を抽出する方法で行う</sen>
<sen num="40">各HSV値の範囲を広くするとマーカ認識率は向上するが，他のマーカのHSV値と認識されてしまうため，適切な値を設定する必要がある</sen>
</paragraph>
</section>
<section num="3">
<t>2.3ルールによる運指補正</t>
<item num="0">
<t></t>
<paragraph num="14">
<sen num="41">前節で述べたように，本研究ではシンプルな画像処理を用いてマーカの位置検出を行っているため，マーカや運指の認識ミスが生じる</sen>
<sen num="42">一般に，認識精度を上げるためには特別な画像変換や複雑なパターン認識を用いるが，それらを適用すると計算コストが高くなり，リアルタイム処理が難しくなる</sen>
<sen num="43">そこで，本研究では鍵盤演奏の運指取得という特徴を活かし，演奏や鍵盤，手の特性をもとに定義されたルールから，運指の修正や運指が認識できなかったときの予測を行う</sen>
</paragraph>
<paragraph num="15">
<sen num="44">表1に本システムで適用した運指ルールを示す</sen>
<sen num="45">以下，各ルールについて説明する</sen>
</paragraph>
</item>
<item num="1">
<t>ルール1</t>
<paragraph num="16">
<sen num="46">親指以外，人差指から小指にかけてはマーカの水平方向の位置関係が崩れることはない</sen>
<sen num="47">ルール1は，マ1一力の未検出（マ1一力の存在そのものが検出されていない状態）やマーカの誤認識（検出したマーカを誤認識している状態）を検出および修正できる</sen>
<sen num="48">なおルール1は，1本の指で複数の鍵を打鍵しない，1つの鍵を複数の指で打鍵しない，という条件下で正しく動作する</sen>
<sen num="49">ルール1を含め以降のルールはいずれも，どのような状況でもうまくいく普遍的なものではない</sen>
<sen num="50">したがって，各ルールはユーザが選択的に利用する</sen>
</paragraph>
<paragraph num="17">
<sen num="51">ルール1の定義より，正しいマーカ順序の組合せは図4に示す5つの正解マーカ群に限定される</sen>
<sen num="52">ここで，図4における正解マーカ群やシステムが認識したマーカの数字は，1から順に親指のマーカから小指のマーカに対応し，「a」や「b」の添え字は，1つしか存在しないはずのマーカが複数検出された場合，それらを区別するために付けた</sen>
<sen num="53">さらに，1つの指で複数鍵の同時打鍵は考えないため，マーカが認識できている場合，その下にある鍵も特定できているとする</sen>
</paragraph>
<paragraph num="18">
<sen num="54">以下，ルール1によるマーカの修正，鍵盤から得られるノートオン情報から運指を特定する手続きについて説明する</sen>
</paragraph>
<paragraph num="19">
<sen num="55">1.	認識マーカと正解マーカ群を入力とする演算子MATCHは，認識マーカの要素と正解マーカの要素が並び順を保ったまま最も一致度が高くなるように割り当て，一致したマーカは「1」を，一致しなかったマーカは「0」をマーカ番号順に出力すると定義する</sen>
<sen num="56">2.	MATCH演算の結果の中で，「1」の個数がもっとも多いものを正解候補とする</sen>
<sen num="57">対応する正解マーカが運指候補となる</sen>
<sen num="58">3.	正解候補が複数あるときはAND演算をとり1つにまとめる</sen>
<sen num="59">結果において「1」と表されたマー力が誤認識されていない確定マ1一力となる</sen>
<sen num="60">4.	確定マーカの下にある鍵が打鍵された場合，運指は一意に定まる</sen>
<sen num="61">一方，確定していないマーカの下にある鍵が打鍵されたときや，打鍵された鍵上にマーカが検出できなかったときは，確定マー力と打鍵された鍵の位置関係をもとにマーカ番号を推測する</sen>
</paragraph>
<paragraph num="20">
<sen num="62">以上のアルゴリズムを図4の例を用いて具体的に説明する</sen>
<sen num="63">例1では，マーカ候補列が一意に決まり，MATCH演算結果から認識マーカ3bの誤認識が判明し，3b — 5と修正される</sen>
<sen num="64">また，例2では，すべてのマーカが確定しているわけではないが，マーカlaあるいはマーカlbの下の鍵が打鍵されたときには1の指か2の指で打鍵されていることがわかる</sen>
<sen num="65">さらに，例3では未検出が多いが，マーカ2とマーカ3が確定しているため，マーカ2より低い鍵や，マーカ2とマーカ3の間の鍵が打鍵されたときにはその指は1であることがわかる</sen>
</paragraph>
</item>
<item num="2">
<t>ルール2</t>
<paragraph num="21">
<sen num="66">1度打鍵した鍵は，離鍵するまで同じ指で押される</sen>
<sen num="67">なお，本ルールは打鍵中における指の置換を考慮していない</sen>
<sen num="68">本ルールは，ある打鍵が発生したとき，打鍵した鍵以外の鍵上にあるマーカを運指の候補から外すことで，考えられる運指の候補を削減する</sen>
<sen num="69">例えば，カメラの位置と実際に打鍵した指の間に他の指がある場合，前の指が後ろの指にあるマーカを隠すため，システムは前の指を打鍵した指であると誤認識してしまう</sen>
<sen num="70">このとき，打鍵しているはずの指が他の打鍵で使われたり，他の鍵上に移動したりした場合にルール2によって運指が修正される</sen>
</paragraph>
</item>
<item num="3">
<t>ルール3</t>
<paragraph num="22">
<sen num="71">図5に示すように同じ高さの音は，同じ運指になることが多い</sen>
<sen num="72">しかし，本ルールは想定する楽曲すべてに適用できるルールではない</sen>
<sen num="73">したがって，ある鍵の打鍵から離鍵においてルール1やルール2を用いても運指が特定できなかったとき，本ルールを用いて過去の運指データから予測を行う</sen>
<sen num="74">具体的には，運指が特定できない音高を発見した場合，該当する音高から4音さかのぼった音列中，同じ音高の運指を採用する</sen>
</paragraph>
</item>
<item num="4">
<t>ルール4</t>
<paragraph num="23">
<sen num="75">図6に示すように同じ構造をした音列は同じ運指列になることが多い</sen>
<sen num="76">ルール4はルール3を適用しても予測できなかった場合に用いる</sen>
<sen num="77">具体的には，該当する音高からさかのぼった8音でグループを形成し，過去に演奏された音列に対し音高列マッチングを行い，マッチしたグループの運指を採用する</sen>
<sen num="78">提案手法ではルール3適用後にルール4を適用するとしているが，ルール3とルール4の適用順序を逆にした場合および，両者を同時に適用して結果を比較するといった方法も考えられる</sen>
<sen num="79">これらの手法の評価は今後の課題である</sen>
<sen num="80">また，ルール3におけるさかのぼる音列数や，ルール4におけるグループ構成音列数の最適な閾値の算出に関しても今後の評価実験を行い検討を行う予定である</sen>
</paragraph>
</item>
</section>
</chapter>
<chapter num="3">
<t>3.運指取得システムの実装</t>
<item num="5">
<t></t>
<paragraph num="24">
<sen num="81">2章で述べた運指取得システムのプロトタイプを実装した</sen>
<sen num="82">プロトタイプシステムを図7に示す</sen>
<sen num="83">PCとしては，SONY 社の VGN-S92PS(CPU 2.13GHz，RAM 2GB)を使用し，MIDI鍵盤としてフルサイズ25鍵盤をもつM-AUDIO社のOXYGEN8を使用した</sen>
<sen num="84">カメフは，Creative 社の WebCam Live! Mo-tion(解像度 320 X 240， フレームレート 最大 30fps)を用いた</sen>
<sen num="85">マーカはNICHIBAN社のマイタック力ラーラべル[13]から判別しやすい色を選定し，各爪に貼り付けた（図1)</sen>
<sen num="86">カメラは爪に貼ってあるマーカがよく見える位置に1台設置した</sen>
<sen num="87">1台のカメラで処理する鍵盤領域が広くなると相対的にマーカが小さくなり認識率が低くなるため，今回のプロトタイプでは1台のカメラによる認識範囲を2オクターブとした</sen>
<sen num="88">最適なカメラ位置から取得した画像と解析する鍵盤領域を図8に示す</sen>
<sen num="89">PC上のソフトウェアの開発は,Windows XP 上で Visual C++ .NET 2003 と Intel社のOpenCVライブラリを用いて行った</sen>
</paragraph>
</item>
<item num="6">
<t>カラ一マーカの色抽出</t>
<paragraph num="25">
<sen num="90">各マーカの色抽出は，サンプルHSV値をあらかじめ取得しておき，それぞれの値から一定範囲に入っている色を抽出する方法で行った</sen>
<sen num="91">図8下に，抽出したマーカを図示する</sen>
<sen num="92">しかし，照明の輝度変化とシールの光沢による反射から指を立てた状態と寝かせた状態のマーカ両方を完全には認識できなかった</sen>
<sen num="93">黒鍵の打鍵や音域の広い音程の打鍵時は，指先が寝た状態になるが，通常，鍵盤演奏では指を立てて演奏することが多いため，指を立てた状態のHSV値をサンプル値とした</sen>
</paragraph>
<paragraph num="26">
<sen num="94">プロトタイプでは片手の運指検出を行い，カラーは，親指から小指にかけて赤，青，緑，ピンク，オレンジの5色を選定した</sen>
</paragraph>
</item>
<item num="7">
<t>運指情報の提示</t>
<paragraph num="27">
<sen num="95">本研究では，リアルタイム性を実現するために複雑な画像処理を避け，ルールを適用することで認識精度を高めている</sen>
<sen num="96">システムが生成する運指は「マーカが正確に認識されル一ルを満たすもの」や「マ一力が誤認識されルールにより推測あるいは修正されたもの」などさまざまである</sen>
<sen num="97">また，いずれのルールも普遍性に欠けるため，各状況に応じて生成された運指情報の確度は異なる</sen>
<sen num="98">したがって，ユーザへの提示方法としては，もっとも確度が高い運指を提示する以外に,確度をもとに順位付けされた複数の運指情報を提示する方法が考えられる</sen>
<sen num="99">提示方法は，利用アプリケーシヨンによって異なる</sen>
<sen num="100">例えば，演奏者の誤った運指をシステムが指摘する場合は前者が，レッスン時のように指導者が生徒の運指確認の参考にする場合は後者の方が適している</sen>
<sen num="101">正確な確度算出は，さまざまな要素が複雑に絡み困難であるため，本研究では，ルールを満たし，かつ，最もマーカ認識率の高い運指をユーザに提示する</sen>
<sen num="102">確度算出のアルゴリズムおよび実装,評価は今後の課題である</sen>
</paragraph>
</item>
</chapter>
<chapter num="4">
<t>4.評価と考察</t>
<section num="4">
<t></t>
<paragraph num="28">
<sen num="103">実装したプロトタイプの有効性を示すために，鍵盤習熟者3名に実際に演奏してもらい運指正答率を調査した</sen>
<sen num="104">また，ルールを適用した場合とそうでない場合とで比較しルールの有効性について検証した</sen>
<sen num="105">以下に，実験の詳細について述べる</sen>
</paragraph>
</section>
<section num="5">
<t>4.1実験の手続き</t>
<item num="8">
<t>課題曲</t>
<paragraph num="29">
<sen num="106">表2に実験で演奏してもらった課題曲とプロファイルを示す</sen>
<sen num="107">また，実験では，全ての楽曲において最初から20小節までを右手で弾く部分のみ演奏してもらった</sen>
</paragraph>
<paragraph num="30">
<sen num="108">曲Aは課題曲の中でもっともテンポが遅い楽曲である</sen>
<sen num="109">しかし，楽譜にはスラ一が記譜されているため，演奏者は親指と他の指との交差を行いながら音をつなげていく</sen>
<sen num="110">また，曲Bは9割が3和音や2和音で構成され，ほとんどの和音はスタッカートで演奏されるため，システムは瞬時に複数の運指を認識しなければならない</sen>
<sen num="111">さらに，曲Cは課題曲の中でもっともテンポが速く，16分音符の連続や装飾音，指の交差も多い</sen>
</paragraph>
</item>
<item num="9">
<t>被験者</t>
<paragraph num="31">
<sen num="112">課題曲を楽譜に指定されたテンポで初見で十分に弾きこなせる音楽大学ピアノ科学生2名と鍵盤暦22年の大学生1名に実験してもらった</sen>
</paragraph>
</item>
<item num="10">
<t>システム構成</t>
<paragraph num="32">
<sen num="113">プロトタイプシステムを用い，midiノートオンおよびノートオフ情報，打鍵および離鍵時刻，ルールを適用したときの運指とルールを適用しなかったときの運指を記録した</sen>
<sen num="114">また，被験者の手元をデジタルビデオカメラで撮影することで正解運指列を得た</sen>
</paragraph>
</item>
<item num="11">
<t>実験の手続き</t>
<paragraph num="33">
<sen num="115">被験者には曲Aから順にすべての曲を2回づつ弾いてもらった</sen>
<sen num="116">各被験者には，弾きやすい運指で楽譜に指示されたテンポで弾くようにと指示した</sen>
</paragraph>
</item>
</section>
<section num="6">
<t>4.2評価結果</t>
<item num="12">
<t></t>
<paragraph num="34">
<sen num="117">図9に各楽曲のルール適用時と未適用時の運指認識正答率を示す</sen>
<sen num="118">ルール適用時の認識正答率は平均して95%と高く，指の交差，複数の指の同時判定，高速で複雑な演奏の追従を高い精度で行えた</sen>
<sen num="119">また，これらは有意水準5%でルール未適用時（平均正答率74%)との有意差も確認できた</sen>
</paragraph>
<paragraph num="35">
<sen num="120">以下，2.3節で定義したルールを適用することで，どのように誤認識が解決されたかについて事例をもとに述べる</sen>
<sen num="121">表3に事例を示し，問題解決に貢献したルールには，◦印を示した</sen>
</paragraph>
</item>
<item num="13">
<t>事例1</t>
<paragraph num="36">
<sen num="122">マ一力認識の不安定さから，人差指，中指，薬指,小指の並び順が崩れた状態で認識されてしまう場合がある</sen>
<sen num="123">これは，ルール1を適用することでありえない交差を検出することで防止できた</sen>
</paragraph>
</item>
<item num="14">
<t>事例2</t>
<paragraph num="37">
<sen num="124">小指や親指は，他の指に隠されることが多くマーカ検出がうまくできなかった</sen>
<sen num="125">したがって，ルール未適用時は運指が特定できなかったため認識ミスの大きな原因となっていた</sen>
<sen num="126">例えば，図10において「曲Aの2小節目のE音」，曲Bのスタッカート付和音,「曲Cの1小節目のA音」，「曲Cの2小節目の最後のC音」などで頻繁に親指の検出ミスが生じていた</sen>
</paragraph>
<paragraph num="38">
<sen num="127">一方，ルール適用時は，ルール1の貢献が大きく他のマーカやMIDI ノートナンバーから運指を補正できた</sen>
<sen num="128">また，ルール2から特定できなかった鍵の打鍵中に，全ての指を監視し，鍵間を動きまわっている指は候補から外すことで運指候補を削減できた</sen>
<sen num="129">このように，双方のルールを適用することで運指の特定率を高めた</sen>
<sen num="130">さらに，曲Bのスタッカート付和音ではルール1やルール2を用いて認識できない場合があった</sen>
<sen num="131">このとき，ルール3による過去の運指データの予測により補正が行われた</sen>
</paragraph>
</item>
<item num="15">
<t>事例3</t>
<paragraph num="39">
<sen num="132">図10に示す「曲Aの2小節目の最初のC音」では，カメラから見て親指の前にある薬指で打鍵しているとシステムは誤認識していた</sen>
<sen num="133">また，「曲Cの4小節目の最後のE音」では打鍵時，親指が認識されず，その後，親指の前に現れる人差指や中指で打鍵したと誤認識してしまった</sen>
</paragraph>
<paragraph num="40">
<sen num="134">ルールを適用した場合，曲Aでは打鍵直後は薬指と認識されたが，F音を小指で弾くために薬指が移動し親指が出現することで，ルール2から薬指は運指候補から外され親指が認識された</sen>
<sen num="135">また，曲CではE音打鍵時にルール1から親指で打鍵されていると認識され，親指の前に覆いかぶさる人差指や中指は,親指打鍵時に他の鍵上にあるため，運指候補から外され正しく認識された</sen>
</paragraph>
</item>
<item num="16">
<t>ル一ル適用時にうまく認識できなかった箇所</t>
<paragraph num="41">
<sen num="136">図10の「曲Aの5小節目の2音目のF音」は人差指で打鍵していたが中指で打鍵していると誤認識してしまった</sen>
<sen num="137">これは，事例3においてルール2がうまく機能しなかった例である</sen>
<sen num="138">ルール2では前にある指が他の鍵に移動することで運指を修正しているが，F音が打鍵されてから離鍵されるまで中指が動かなかったため誤認識してしまった</sen>
</paragraph>
</item>
<item num="17">
<t>処理速度</t>
<paragraph num="42">
<sen num="139">画像処理をシンプルにし，ルールにより補正することで，リアルタイムで運指認識ができた</sen>
<sen num="140">1フレームあたりの処理時間は平均20msecとカメラのフレームレート内で画像処理を完了できる</sen>
<sen num="141">今後は，1台のPCでより広い音域を認識するために複数台のカメラの使用を考えている</sen>
<sen num="142">また，状況に合わせて適用するルールを動的に選択し処理の軽減を行う予定である</sen>
</paragraph>
</item>
<item num="18">
<t>マ一力認識率の向上</t>
<paragraph num="43">
<sen num="143">今回マーカとして市販されているシールを用いたが，色が限定されており光沢感もあったため光に反射してマーカ認識率が下がるという問題があった</sen>
<sen num="144">今後は，マーカ認識率を向上させるために，光の反射をカットする偏光フィルタをカメラに取り付けたり，光沢のないマーカを使用するといった工夫を行う予定である</sen>
<sen num="145">また，爪先のマーカだけでなく指の肌色部分も認識させることで，手の可動領域を考慮した認識率の向上および計算量の削減を行う</sen>
</paragraph>
</item>
</section>
</chapter>
<chapter num="5">
<t>5.関連研究</t>
<paragraph num="44">
<sen num="146">鍵盤の運指取得を主目的とした研究事例は少ない</sen>
<sen num="147">デ一タグロ一ブ[10]や FingerRing[12]，Liglitglover2lから出力されるデータを用いれば運指を取得することが可能であるが，これらのデバイスは鍵盤演奏を使用目的として考えていないため，指にまとわりつくセンサや手首に設置する回路，配線などで演奏を妨げてしまう</sen>
<sen num="148">また，バーチャルキーボード[14]は本研究と同様のアプローチでカメラを用いて実時間指先検出を実現している</sen>
<sen num="149">しかし，画像処理ベースで認識を行い，使用用途はPC用キーボードを想定しているため指が交差するといった状況に対応できない</sen>
</paragraph>
<paragraph num="45">
<sen num="150">一方，あらかじめ入力しておいた楽曲デ'1一タをもとに運指を自動生成する試みは多数存在する</sen>
<sen num="151">運指生成のアプローチとして，ある2本の指が打鍵可能な音域を求め最適な運指を見つける方法[1]や手の移動距離[9]，楽曲の構造に着目[11]した研究などがある</sen>
<sen num="152">これらは，手や指に負担をかけない模範的な運指を生成することを目的としており，実際に演奏者が弾いている楽曲の運指をリアルタイムで取得することを目的としている本研究とは異なる</sen>
<sen num="153">また，これらの方式では1章で述べたような音楽的な指使いを生成することは難しく，片手かつ単旋律でしか運指を生成できないなど実用性に問題がある</sen>
<sen num="154">ただし，これらの研究はいくつかの運指ル1一ルを含んでおりこれらのル1一ルを取り込むことで提案方式の精度を高められる可能性がある</sen>
</paragraph>
<paragraph num="46">
<sen num="155">ハンドジェスチヤの研究として，RGB出力のカメラや赤外線カメラを用いユーザの指先を検出しインタラクシヨンを行う研究[7][3]がある</sen>
<sen num="156">これらは，いずれも複数のカメラを用いるなどカメラベースでジェスチヤ認識を行っており，本研究のように画像処理以外の特性を用いて認識率を向上させるといった工夫は行っていない</sen>
</paragraph>
</chapter>
<chapter num="6">
<t>6.おわりに</t>
<paragraph num="47">
<sen num="157">本研究では，爪に貼り付けたカラーマーカをカメラで認識することで実時間で運指取得するシステムを構築した</sen>
<sen num="158">提案システムは実時間処理を実現するために複雑な画像処理を避け，演奏や手，鍵盤の特性をもとに定義したルールから運指認識率の向上を図った</sen>
<sen num="159">プロトタイプシステムの評価結果より，運指を高い精度で取得できることがわかった</sen>
</paragraph>
<paragraph num="48">
<sen num="160">今後の課題としては，これまでの章で述べたもの以外に，両手への拡張や，さまざまなレベルのピアノ習熟者による評価実験を行う予定である</sen>
</paragraph>
</chapter>
</doc>
